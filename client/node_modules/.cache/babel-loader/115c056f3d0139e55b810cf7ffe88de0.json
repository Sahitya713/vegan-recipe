{"ast":null,"code":"var _jsxFileName = \"C:\\\\NTU\\\\Admin\\\\internship\\\\recipe app - abillionveg\\\\client\\\\src\\\\components\\\\Edit.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Edit extends Component {\n  constructor() {\n    super();\n\n    this.getID = () => {\n      const id = this.props.match.params.id;\n      this.setState({\n        id\n      }, this.getRecipe);\n    };\n\n    this.getRecipe = () => {\n      var requestOptions = {\n        method: 'GET',\n        redirect: 'follow'\n      };\n      fetch(`http://localhost:8000/api/v1/recipes/${this.state.id}`, requestOptions).then(res => res.text()).then(res => {\n        const response = JSON.parse(res).data.data;\n        let data = {};\n        data.title = response.title;\n        data.imageUrl = response.image;\n        data.ingredients = response.ingredients;\n        data.steps = response.steps; // const responses = JSON.parse(res).data.data;\n\n        this.setState(data);\n      }).catch(error => console.log('error', error));\n    };\n\n    this.componentWillMount = () => {\n      this.getID();\n    };\n\n    this.selectImages = event => {\n      let image = event.target.files[0];\n      this.setState({\n        image\n      });\n    };\n\n    this.handleStepAdd = event => {\n      event.preventDefault();\n      var values = [...this.state.steps];\n      values.push({\n        instruction: 'Enter instruction'\n      });\n      this.setState({\n        steps: values\n      });\n    };\n\n    this.handleStepDelete = event => {\n      event.preventDefault();\n      const {\n        id\n      } = event.target;\n      var values = [...this.state.steps];\n      values.splice(id, 1);\n      this.setState({\n        steps: values\n      });\n    };\n\n    this.handleStep = event => {\n      const {\n        id,\n        name,\n        value\n      } = event.target;\n      var values = [...this.state.steps];\n      values[id][name] = value;\n      this.setState({\n        steps: values\n      });\n    };\n\n    this.handleIngredientAdd = event => {\n      event.preventDefault();\n      var values = [...this.state.ingredients];\n      values.push({\n        name: 'Enter ingredient name',\n        quantity: 'Enter quantity'\n      });\n      this.setState({\n        ingredients: values\n      });\n    };\n\n    this.handleIngredientDelete = event => {\n      event.preventDefault();\n      const {\n        id\n      } = event.target;\n      var values = [...this.state.ingredients];\n      values.splice(id, 1);\n      this.setState({\n        ingredients: values\n      });\n    };\n\n    this.handleIngredient = event => {\n      const {\n        id,\n        name,\n        value\n      } = event.target;\n      var values = [...this.state.ingredients];\n      values[id][name] = value;\n      this.setState({\n        ingredients: values\n      });\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.updateRecipe();\n    };\n\n    this.updateRecipe = () => {\n      var err = [];\n      const {\n        steps,\n        image,\n        title,\n        ingredients\n      } = this.state;\n      if (title === '') err.push('Please enter a title');\n\n      if (image && !(image.type === 'image/jpeg' || image.type === 'image/jpg' || image.type === 'image/png' || image.type === 'image/pdf')) {\n        err.push('Only images of type jpeg, jpg, png or pdf can be uploaded');\n      }\n\n      for (var j = 0; j < steps.length; j++) {\n        if (steps[j].instruction === 'Enter instruction' || steps[j].instruction === '') {\n          err.push('Please ensure all the instructions are listed properly');\n          break;\n        }\n      }\n\n      for (var i = 0; i < ingredients.length; i++) {\n        if (ingredients[i].name === 'Enter ingredient name' || ingredients[i].name === '' || ingredients[i].quantity === 'Enter quantity' || ingredients[i].quantity === '') {\n          err.push('Please ensure all the ingredient names and quantity are listed properly');\n          break;\n        }\n      }\n\n      if (err.length > 0) {\n        this.setState({\n          errorMessages: err\n        });\n        return;\n      }\n\n      var formdata = new FormData();\n      formdata.append('steps', JSON.stringify(steps));\n      formdata.append('ingredients', JSON.stringify(ingredients));\n      formdata.append('title', title);\n\n      if (image) {\n        formdata.append('image', image, image.name);\n      }\n\n      var requestOptions = {\n        method: 'PATCH',\n        body: formdata,\n        redirect: 'follow'\n      };\n      fetch(`http://localhost:8000/api/v1/recipes/${this.state.id}`, requestOptions).then(response => response.text()).then(result => {\n        const res = JSON.parse(result);\n\n        if (res.status === 'error') {\n          var err = [];\n          err.push(res.message);\n          this.setState({\n            errorMessages: err\n          });\n        } else if (res.status === 'success') {\n          this.setState({\n            infoUpdated: true\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      title: 'Enter title',\n      steps: [{\n        instruction: 'Enter instruction'\n      }],\n      ingredients: [{\n        name: 'Enter ingredient name',\n        quantity: 'Enter quantity'\n      }],\n      imageUrl: '',\n      image: null,\n      errorMessages: [],\n      infoUpdated: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Edit your Recipe!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-wrap\",\n          onSubmit: this.updateRecipe,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-label label\",\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.title,\n            name: \"title\",\n            onChange: this.handleChange,\n            className: \"title-input input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"curr-img-wrap\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"curr-img\",\n              src: this.state.imageUrl,\n              alt: \"OriginalImage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"img-label label\",\n            children: \"Upload a different image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: this.selectImages,\n            accept: \".jpg, .jpeg, .png, .pdf\",\n            className: \"img-upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"label\",\n              children: \"Ingredients required:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ingredient-wrap\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label ingredient-label\",\n                children: \"Ingredient:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label quantity-label\",\n                children: \"quantity:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), this.state.ingredients.map((ingredient, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: ingredient.name,\n                name: \"name\",\n                id: i,\n                onChange: this.handleIngredient,\n                className: \"input ingredient-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: ingredient.quantity,\n                name: \"quantity\",\n                id: i,\n                onChange: this.handleIngredient,\n                className: \"input quantity-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"x\",\n                id: i,\n                onClick: this.handleIngredientDelete,\n                children: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add\",\n              name: \"addIngredient\",\n              onClick: this.handleIngredientAdd,\n              children: \"+ Add Ingredient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"label\",\n              children: \"Instructions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), this.state.steps.map((step, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label step-label\",\n                children: [\"step \", i + 1, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: step.instruction,\n                name: \"instruction\",\n                id: i,\n                onChange: this.handleStep,\n                className: \"input step-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"x\",\n                id: i,\n                onClick: this.handleStepDelete,\n                children: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add\",\n              name: \"addStep\",\n              onClick: this.handleStepAdd,\n              children: \"+ Add Instruction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button submit\",\n            onClick: this.handleSubmit,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"err-wrap\",\n            children: this.state.errorMessages.map((err, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: err\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), this.state.infoUpdated && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"background\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"question\",\n          children: \"Your recipe has been successfully updated!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"buttons-wrap \",\n          to: `/${this.state.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button link\",\n            children: \"View Recipe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Edit;","map":{"version":3,"sources":["C:/NTU/Admin/internship/recipe app - abillionveg/client/src/components/Edit.js"],"names":["React","Component","Link","Edit","constructor","getID","id","props","match","params","setState","getRecipe","requestOptions","method","redirect","fetch","state","then","res","text","response","JSON","parse","data","title","imageUrl","image","ingredients","steps","catch","error","console","log","componentWillMount","selectImages","event","target","files","handleStepAdd","preventDefault","values","push","instruction","handleStepDelete","splice","handleStep","name","value","handleIngredientAdd","quantity","handleIngredientDelete","handleIngredient","handleChange","handleSubmit","updateRecipe","err","type","j","length","i","errorMessages","formdata","FormData","append","stringify","body","result","status","message","infoUpdated","render","map","ingredient","step"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Edit extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      title: 'Enter title',\r\n      steps: [{ instruction: 'Enter instruction' }],\r\n      ingredients: [\r\n        { name: 'Enter ingredient name', quantity: 'Enter quantity' },\r\n      ],\r\n      imageUrl: '',\r\n      image: null,\r\n      errorMessages: [],\r\n      infoUpdated: false,\r\n    };\r\n  }\r\n\r\n  getID = () => {\r\n    const id = this.props.match.params.id;\r\n    this.setState({ id }, this.getRecipe);\r\n  };\r\n\r\n  getRecipe = () => {\r\n    var requestOptions = {\r\n      method: 'GET',\r\n      redirect: 'follow',\r\n    };\r\n\r\n    fetch(\r\n      `http://localhost:8000/api/v1/recipes/${this.state.id}`,\r\n      requestOptions\r\n    )\r\n      .then((res) => res.text())\r\n      .then((res) => {\r\n        const response = JSON.parse(res).data.data;\r\n\r\n        let data = {};\r\n        data.title = response.title;\r\n        data.imageUrl = response.image;\r\n        data.ingredients = response.ingredients;\r\n        data.steps = response.steps;\r\n\r\n        // const responses = JSON.parse(res).data.data;\r\n        this.setState(data);\r\n      })\r\n      .catch((error) => console.log('error', error));\r\n  };\r\n  componentWillMount = () => {\r\n    this.getID();\r\n  };\r\n\r\n  selectImages = (event) => {\r\n    let image = event.target.files[0];\r\n    this.setState({ image });\r\n  };\r\n  handleStepAdd = (event) => {\r\n    event.preventDefault();\r\n    var values = [...this.state.steps];\r\n    values.push({ instruction: 'Enter instruction' });\r\n    this.setState({ steps: values });\r\n  };\r\n  handleStepDelete = (event) => {\r\n    event.preventDefault();\r\n    const { id } = event.target;\r\n    var values = [...this.state.steps];\r\n    values.splice(id, 1);\r\n    this.setState({ steps: values });\r\n  };\r\n  handleStep = (event) => {\r\n    const { id, name, value } = event.target;\r\n    var values = [...this.state.steps];\r\n    values[id][name] = value;\r\n    this.setState({ steps: values });\r\n  };\r\n  handleIngredientAdd = (event) => {\r\n    event.preventDefault();\r\n    var values = [...this.state.ingredients];\r\n    values.push({ name: 'Enter ingredient name', quantity: 'Enter quantity' });\r\n    this.setState({ ingredients: values });\r\n  };\r\n  handleIngredientDelete = (event) => {\r\n    event.preventDefault();\r\n    const { id } = event.target;\r\n    var values = [...this.state.ingredients];\r\n    values.splice(id, 1);\r\n    this.setState({ ingredients: values });\r\n  };\r\n  handleIngredient = (event) => {\r\n    const { id, name, value } = event.target;\r\n    var values = [...this.state.ingredients];\r\n    values[id][name] = value;\r\n    this.setState({ ingredients: values });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.updateRecipe();\r\n  };\r\n\r\n  updateRecipe = () => {\r\n    var err = [];\r\n    const { steps, image, title, ingredients } = this.state;\r\n\r\n    if (title === '') err.push('Please enter a title');\r\n    if (\r\n      image &&\r\n      !(\r\n        image.type === 'image/jpeg' ||\r\n        image.type === 'image/jpg' ||\r\n        image.type === 'image/png' ||\r\n        image.type === 'image/pdf'\r\n      )\r\n    ) {\r\n      err.push('Only images of type jpeg, jpg, png or pdf can be uploaded');\r\n    }\r\n    for (var j = 0; j < steps.length; j++) {\r\n      if (\r\n        steps[j].instruction === 'Enter instruction' ||\r\n        steps[j].instruction === ''\r\n      ) {\r\n        err.push('Please ensure all the instructions are listed properly');\r\n        break;\r\n      }\r\n    }\r\n    for (var i = 0; i < ingredients.length; i++) {\r\n      if (\r\n        ingredients[i].name === 'Enter ingredient name' ||\r\n        ingredients[i].name === '' ||\r\n        ingredients[i].quantity === 'Enter quantity' ||\r\n        ingredients[i].quantity === ''\r\n      ) {\r\n        err.push(\r\n          'Please ensure all the ingredient names and quantity are listed properly'\r\n        );\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (err.length > 0) {\r\n      this.setState({ errorMessages: err });\r\n      return;\r\n    }\r\n\r\n    var formdata = new FormData();\r\n\r\n    formdata.append('steps', JSON.stringify(steps));\r\n    formdata.append('ingredients', JSON.stringify(ingredients));\r\n    formdata.append('title', title);\r\n    if (image) {\r\n      formdata.append('image', image, image.name);\r\n    }\r\n\r\n    var requestOptions = {\r\n      method: 'PATCH',\r\n      body: formdata,\r\n      redirect: 'follow',\r\n    };\r\n\r\n    fetch(\r\n      `http://localhost:8000/api/v1/recipes/${this.state.id}`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.text())\r\n\r\n      .then((result) => {\r\n        const res = JSON.parse(result);\r\n\r\n        if (res.status === 'error') {\r\n          var err = [];\r\n          err.push(res.message);\r\n          this.setState({ errorMessages: err });\r\n        } else if (res.status === 'success') {\r\n          this.setState({\r\n            infoUpdated: true,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"title\">Edit your Recipe!</h1>\r\n        <div>\r\n          <form className=\"form-wrap\" onSubmit={this.updateRecipe}>\r\n            <div className=\"title-label label\">Title:</div>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.title}\r\n              name=\"title\"\r\n              onChange={this.handleChange}\r\n              className=\"title-input input\"\r\n            />\r\n            <div className=\"curr-img-wrap\">\r\n              <img\r\n                className=\"curr-img\"\r\n                src={this.state.imageUrl}\r\n                alt=\"OriginalImage\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"img-label label\">Upload a different image</div>\r\n            <input\r\n              type=\"file\"\r\n              onChange={this.selectImages}\r\n              accept=\".jpg, .jpeg, .png, .pdf\"\r\n              className=\"img-upload\"\r\n            />\r\n            <div>\r\n              <div className=\"label\">Ingredients required:</div>\r\n              <div className=\"ingredient-wrap\">\r\n                <span className=\"label ingredient-label\">Ingredient:</span>\r\n                <span className=\"label quantity-label\">quantity:</span>\r\n              </div>\r\n              {this.state.ingredients.map((ingredient, i) => (\r\n                <div key={i}>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={ingredient.name}\r\n                    name=\"name\"\r\n                    id={i}\r\n                    onChange={this.handleIngredient}\r\n                    className=\"input ingredient-input\"\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    value={ingredient.quantity}\r\n                    name=\"quantity\"\r\n                    id={i}\r\n                    onChange={this.handleIngredient}\r\n                    className=\"input quantity-input\"\r\n                  />\r\n                  <button\r\n                    className=\"x\"\r\n                    id={i}\r\n                    onClick={this.handleIngredientDelete}\r\n                  >\r\n                    x\r\n                  </button>\r\n                </div>\r\n              ))}\r\n              <button\r\n                className=\"add\"\r\n                name=\"addIngredient\"\r\n                onClick={this.handleIngredientAdd}\r\n              >\r\n                + Add Ingredient\r\n              </button>\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"label\">Instructions:</div>\r\n              {this.state.steps.map((step, i) => (\r\n                <div key={i}>\r\n                  <span className=\"label step-label\">step {i + 1}:</span>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={step.instruction}\r\n                    name=\"instruction\"\r\n                    id={i}\r\n                    onChange={this.handleStep}\r\n                    className=\"input step-input\"\r\n                  />\r\n\r\n                  <button className=\"x\" id={i} onClick={this.handleStepDelete}>\r\n                    x\r\n                  </button>\r\n                </div>\r\n              ))}\r\n              <button\r\n                className=\"add\"\r\n                name=\"addStep\"\r\n                onClick={this.handleStepAdd}\r\n              >\r\n                + Add Instruction\r\n              </button>\r\n            </div>\r\n            <button className=\"button submit\" onClick={this.handleSubmit}>\r\n              Edit\r\n            </button>\r\n            <div className=\"err-wrap\">\r\n              {this.state.errorMessages.map((err, i) => (\r\n                <div key={i}>{err}</div>\r\n              ))}\r\n            </div>\r\n          </form>\r\n        </div>\r\n        {this.state.infoUpdated && (\r\n          <div className=\"background\">\r\n            <h1 className=\"question\">\r\n              Your recipe has been successfully updated!\r\n            </h1>\r\n            <Link className=\"buttons-wrap \" to={`/${this.state.id}`}>\r\n              <button className=\"button link\">View Recipe</button>\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Edit;\r\n"]},"metadata":{},"sourceType":"module"}