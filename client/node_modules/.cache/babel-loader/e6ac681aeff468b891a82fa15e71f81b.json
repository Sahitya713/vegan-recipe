{"ast":null,"code":"var _jsxFileName = \"C:\\\\NTU\\\\Admin\\\\internship\\\\recipe app - abillionveg\\\\client\\\\src\\\\components\\\\Create.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Recipe extends Component {\n  constructor() {\n    super();\n\n    this.selectImages = event => {\n      let image = event.target.files[0];\n      this.setState({\n        image\n      });\n    };\n\n    this.handleStepAdd = event => {\n      event.preventDefault();\n      var values = [...this.state.steps];\n      values.push({\n        instruction: \"Enter instruction\"\n      });\n      this.setState({\n        steps: values\n      });\n    };\n\n    this.handleStepDelete = event => {\n      event.preventDefault();\n      const {\n        id\n      } = event.target;\n      var values = [...this.state.steps];\n      values.splice(id, 1);\n      this.setState({\n        steps: values\n      });\n    };\n\n    this.handleStep = event => {\n      const {\n        id,\n        name,\n        value\n      } = event.target;\n      var values = [...this.state.steps];\n      values[id][name] = value;\n      this.setState({\n        steps: values\n      });\n    };\n\n    this.handleIngredientAdd = event => {\n      event.preventDefault();\n      var values = [...this.state.ingredients];\n      values.push({\n        name: \"Enter ingredient name\",\n        quantity: \"Enter quantity\"\n      });\n      this.setState({\n        ingredients: values\n      });\n    };\n\n    this.handleIngredientDelete = event => {\n      event.preventDefault();\n      const {\n        id\n      } = event.target;\n      var values = [...this.state.ingredients];\n      values.splice(id, 1);\n      this.setState({\n        ingredients: values\n      });\n    };\n\n    this.handleIngredient = event => {\n      const {\n        id,\n        name,\n        value\n      } = event.target;\n      var values = [...this.state.ingredients];\n      values[id][name] = value;\n      this.setState({\n        ingredients: values\n      });\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.createRecipe();\n    };\n\n    this.createRecipe = () => {\n      var err = [];\n      const {\n        steps,\n        image,\n        title,\n        ingredients\n      } = this.state;\n\n      if (image === null || title === \"Enter title\" || title === \"\") {\n        err.push(\"Please enter all the information\");\n      } else if (!(image.type === \"image/jpeg\" || image.type === \"image/jpg\" || image.type === \"image/png\" || image.type === \"image/pdf\")) {\n        err.push(\"Only images of type jpeg, jpg, png or pdf can be uploaded\");\n      }\n\n      for (var j = 0; j < steps.length; j++) {\n        if (steps[j].instruction === \"Enter instruction\" || steps[j].instruction === \"\") {\n          err.push(\"Please ensure all the instructions are listed properly\");\n          break;\n        }\n      }\n\n      for (var i = 0; i < ingredients.length; i++) {\n        if (ingredients[i].name === \"Enter ingredient name\" || ingredients[i].name === \"\" || ingredients[i].quantity === \"Enter quantity\" || ingredients[i].quantity === \"\") {\n          err.push(\"Please ensure all the ingredient names and quantity are listed properly\");\n          break;\n        }\n      }\n\n      if (err.length > 0) {\n        this.setState({\n          errorMessages: err\n        });\n        return;\n      }\n\n      var formdata = new FormData();\n      formdata.append(\"steps\", JSON.stringify(steps));\n      formdata.append(\"ingredients\", JSON.stringify(ingredients));\n      formdata.append(\"title\", title);\n      formdata.append(\"image\", image, image.name);\n      var requestOptions = {\n        method: \"POST\",\n        body: formdata,\n        redirect: \"follow\"\n      };\n      fetch(\"http://127.0.0.1:8000/api/v1/recipes/\", requestOptions).then(response => response.text()).then(result => {\n        const res = JSON.parse(result);\n\n        if (res.status === \"error\") {\n          var err = [];\n          err.push(res.message);\n          this.setState({\n            errorMessages: err\n          });\n        } else if (res.status === \"success\") {\n          const id = res.data.data._id;\n          this.setState({\n            infoUploaded: true,\n            id\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      title: \"Enter title\",\n      steps: [{\n        instruction: \"Enter instruction\"\n      }],\n      ingredients: [{\n        name: \"Enter ingredient name\",\n        quantity: \"Enter quantity\"\n      }],\n      image: null,\n      errorMessages: [],\n      infoUploaded: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Create a new Vegan Recipe!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-wrap\",\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-label label\",\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.title,\n            name: \"title\",\n            onChange: this.handleChange,\n            className: \"title-input input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"img-label label\",\n            children: \"Upload an image of the item:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: this.selectImages,\n            accept: \".jpg, .jpeg, .png, .pdf\",\n            className: \"img-upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"label\",\n              children: \"Ingredients required:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ingredient-wrap\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label ingredient-label\",\n                children: \"Ingredient:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label quantity-label\",\n                children: \"quantity:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), this.state.ingredients.map((ingredient, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: ingredient.name,\n                name: \"name\",\n                id: i,\n                onChange: this.handleIngredient,\n                className: \"input ingredient-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: ingredient.quantity,\n                name: \"quantity\",\n                id: i,\n                onChange: this.handleIngredient,\n                className: \"input quantity-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"x\",\n                id: i,\n                onClick: this.handleIngredientDelete,\n                children: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add\",\n              name: \"addIngredient\",\n              onClick: this.handleIngredientAdd,\n              children: \"+ Add Ingredient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"label\",\n              children: \"Instructions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), this.state.steps.map((step, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label step-label\",\n                children: [\"step \", i + 1, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: step.instruction,\n                name: \"instruction\",\n                id: i,\n                onChange: this.handleStep,\n                className: \"input step-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"x\",\n                id: i,\n                onClick: this.handleStepDelete,\n                children: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add\",\n              name: \"addStep\",\n              onClick: this.handleStepAdd,\n              children: \"+ Add Instruction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button submit\",\n            onClick: this.handleSubmit,\n            children: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"err-wrap\",\n            children: this.state.errorMessages && this.state.errorMessages.map((err, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: err\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), this.state.infoUploaded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"background\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"question\",\n          children: \"Your recipe has been successfully uploaded!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"buttons-wrap\",\n          to: `/${this.state.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button link\",\n            children: \"View Recipe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Recipe;","map":{"version":3,"sources":["C:/NTU/Admin/internship/recipe app - abillionveg/client/src/components/Create.js"],"names":["React","Component","Link","Recipe","constructor","selectImages","event","image","target","files","setState","handleStepAdd","preventDefault","values","state","steps","push","instruction","handleStepDelete","id","splice","handleStep","name","value","handleIngredientAdd","ingredients","quantity","handleIngredientDelete","handleIngredient","handleChange","handleSubmit","createRecipe","err","title","type","j","length","i","errorMessages","formdata","FormData","append","JSON","stringify","requestOptions","method","body","redirect","fetch","then","response","text","result","res","parse","status","message","data","_id","infoUploaded","catch","error","console","log","render","map","ingredient","step"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Recipe extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      title: \"Enter title\",\r\n      steps: [{ instruction: \"Enter instruction\" }],\r\n      ingredients: [\r\n        { name: \"Enter ingredient name\", quantity: \"Enter quantity\" },\r\n      ],\r\n      image: null,\r\n      errorMessages: [],\r\n      infoUploaded: false,\r\n    };\r\n  }\r\n\r\n  selectImages = (event) => {\r\n    let image = event.target.files[0];\r\n    this.setState({ image });\r\n  };\r\n  handleStepAdd = (event) => {\r\n    event.preventDefault();\r\n    var values = [...this.state.steps];\r\n    values.push({ instruction: \"Enter instruction\" });\r\n    this.setState({ steps: values });\r\n  };\r\n  handleStepDelete = (event) => {\r\n    event.preventDefault();\r\n    const { id } = event.target;\r\n    var values = [...this.state.steps];\r\n    values.splice(id, 1);\r\n    this.setState({ steps: values });\r\n  };\r\n  handleStep = (event) => {\r\n    const { id, name, value } = event.target;\r\n    var values = [...this.state.steps];\r\n    values[id][name] = value;\r\n    this.setState({ steps: values });\r\n  };\r\n  handleIngredientAdd = (event) => {\r\n    event.preventDefault();\r\n    var values = [...this.state.ingredients];\r\n    values.push({ name: \"Enter ingredient name\", quantity: \"Enter quantity\" });\r\n    this.setState({ ingredients: values });\r\n  };\r\n  handleIngredientDelete = (event) => {\r\n    event.preventDefault();\r\n    const { id } = event.target;\r\n    var values = [...this.state.ingredients];\r\n    values.splice(id, 1);\r\n    this.setState({ ingredients: values });\r\n  };\r\n  handleIngredient = (event) => {\r\n    const { id, name, value } = event.target;\r\n    var values = [...this.state.ingredients];\r\n    values[id][name] = value;\r\n    this.setState({ ingredients: values });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.createRecipe();\r\n  };\r\n\r\n  createRecipe = () => {\r\n    var err = [];\r\n    const { steps, image, title, ingredients } = this.state;\r\n\r\n    if (image === null || title === \"Enter title\" || title === \"\") {\r\n      err.push(\"Please enter all the information\");\r\n    } else if (\r\n      !(\r\n        image.type === \"image/jpeg\" ||\r\n        image.type === \"image/jpg\" ||\r\n        image.type === \"image/png\" ||\r\n        image.type === \"image/pdf\"\r\n      )\r\n    ) {\r\n      err.push(\"Only images of type jpeg, jpg, png or pdf can be uploaded\");\r\n    }\r\n    for (var j = 0; j < steps.length; j++) {\r\n      if (\r\n        steps[j].instruction === \"Enter instruction\" ||\r\n        steps[j].instruction === \"\"\r\n      ) {\r\n        err.push(\"Please ensure all the instructions are listed properly\");\r\n        break;\r\n      }\r\n    }\r\n    for (var i = 0; i < ingredients.length; i++) {\r\n      if (\r\n        ingredients[i].name === \"Enter ingredient name\" ||\r\n        ingredients[i].name === \"\" ||\r\n        ingredients[i].quantity === \"Enter quantity\" ||\r\n        ingredients[i].quantity === \"\"\r\n      ) {\r\n        err.push(\r\n          \"Please ensure all the ingredient names and quantity are listed properly\"\r\n        );\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (err.length > 0) {\r\n      this.setState({ errorMessages: err });\r\n      return;\r\n    }\r\n\r\n    var formdata = new FormData();\r\n\r\n    formdata.append(\"steps\", JSON.stringify(steps));\r\n    formdata.append(\"ingredients\", JSON.stringify(ingredients));\r\n    formdata.append(\"title\", title);\r\n    formdata.append(\"image\", image, image.name);\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(\"http://127.0.0.1:8000/api/v1/recipes/\", requestOptions)\r\n      .then((response) => response.text())\r\n      .then((result) => {\r\n        const res = JSON.parse(result);\r\n\r\n        if (res.status === \"error\") {\r\n          var err = [];\r\n          err.push(res.message);\r\n          this.setState({ errorMessages: err });\r\n        } else if (res.status === \"success\") {\r\n          const id = res.data.data._id;\r\n          this.setState({\r\n            infoUploaded: true,\r\n            id,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"title\">Create a new Vegan Recipe!</h1>\r\n        <div>\r\n          <form className=\"form-wrap\" onSubmit={this.handleSubmit}>\r\n            <div className=\"title-label label\">Title:</div>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.title}\r\n              name=\"title\"\r\n              onChange={this.handleChange}\r\n              className=\"title-input input\"\r\n            />\r\n            <div className=\"img-label label\">Upload an image of the item:</div>\r\n            <input\r\n              type=\"file\"\r\n              onChange={this.selectImages}\r\n              accept=\".jpg, .jpeg, .png, .pdf\"\r\n              className=\"img-upload\"\r\n            />\r\n            <div>\r\n              <div className=\"label\">Ingredients required:</div>\r\n              <div className=\"ingredient-wrap\">\r\n                <span className=\"label ingredient-label\">Ingredient:</span>\r\n                <span className=\"label quantity-label\">quantity:</span>\r\n              </div>\r\n              {this.state.ingredients.map((ingredient, i) => (\r\n                <div key={i}>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={ingredient.name}\r\n                    name=\"name\"\r\n                    id={i}\r\n                    onChange={this.handleIngredient}\r\n                    className=\"input ingredient-input\"\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    value={ingredient.quantity}\r\n                    name=\"quantity\"\r\n                    id={i}\r\n                    onChange={this.handleIngredient}\r\n                    className=\"input quantity-input\"\r\n                  />\r\n                  <button\r\n                    className=\"x\"\r\n                    id={i}\r\n                    onClick={this.handleIngredientDelete}\r\n                  >\r\n                    x\r\n                  </button>\r\n                </div>\r\n              ))}\r\n              <button\r\n                className=\"add\"\r\n                name=\"addIngredient\"\r\n                onClick={this.handleIngredientAdd}\r\n              >\r\n                + Add Ingredient\r\n              </button>\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"label\">Instructions:</div>\r\n              {this.state.steps.map((step, i) => (\r\n                <div key={i}>\r\n                  <span className=\"label step-label\">step {i + 1}:</span>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={step.instruction}\r\n                    name=\"instruction\"\r\n                    id={i}\r\n                    onChange={this.handleStep}\r\n                    className=\"input step-input\"\r\n                  />\r\n\r\n                  <button className=\"x\" id={i} onClick={this.handleStepDelete}>\r\n                    x\r\n                  </button>\r\n                </div>\r\n              ))}\r\n              <button\r\n                className=\"add\"\r\n                name=\"addStep\"\r\n                onClick={this.handleStepAdd}\r\n              >\r\n                + Add Instruction\r\n              </button>\r\n            </div>\r\n            <button className=\"button submit\" onClick={this.handleSubmit}>\r\n              submit\r\n            </button>\r\n            <div className=\"err-wrap\">\r\n              {this.state.errorMessages &&\r\n                this.state.errorMessages.map((err, i) => (\r\n                  <div key={i}>{err}</div>\r\n                ))}\r\n            </div>\r\n          </form>\r\n        </div>\r\n        {this.state.infoUploaded && (\r\n          <div className=\"background\">\r\n            <h1 className=\"question\">\r\n              Your recipe has been successfully uploaded!\r\n            </h1>\r\n            <Link className=\"buttons-wrap\" to={`/${this.state.id}`}>\r\n              <button className=\"button link\">View Recipe</button>\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Recipe;\r\n"]},"metadata":{},"sourceType":"module"}